{"version":3,"sources":["components/comment.js","components/markview.js","pages/article.js","components/footer.js","util/Fetch.js","util/api.js"],"names":["number","Control","path","split","Gitalk","clientID","clientSecret","repo","owner","admin","Number","distractionFreeMode","render","react_default","a","createElement","id","PureComponent","markview","props","className","dangerouslySetInnerHTML","value","md","Remarkable","html","breaks","typographer","langPrefix","highlight","str","lang","hljs","getLanguage","configure","classPrefix","err","highlightAuto","core","ruler","enable","inline","__html","getRawMarkup","state","article","isrender","getArticle","_callee","_ref2","issue","regenerator_default","wrap","_context","prev","next","_this","setState","getArticleDetail","sent","data","repository","stop","this","nextProps","pathname","indexOf","params","_this$state","_this$state$article","title","createdAt","body","labels","loader","moment","utcOffset","format","nodes","length","map","category","i","react_keeper","key","to","name","comment_default","footer","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","__webpack_exports__","href","rel","target","fetchData","_ref","Object","F_github_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","F_github_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","url","_ref2$method","method","_ref2$headers","headers","_args","arguments","undefined","Content-Type","fetch","assign","then","response","ok","json","catch","console","warn","abrupt","t0","_x","apply","Authorization","concat","replace","getArticleList","_ref4","_callee2","_ref3","_ref3$pageSize","pageSize","_ref3$after","after","_ref3$before","before","_ref3$labels","_context2","JSON","stringify","query","_x2","_ref6","_callee3","_ref5","_context3","_x3","getCategory","_ref7","_callee4","_context4"],"mappings":"8bAOQ,IAAMA,EAASC,UAAQC,KAAKC,MAAM,YAAY,GACjC,IAAIC,IAAO,CACpBC,SAAU,uBACVC,aAAc,2CACdC,KAAM,QACNC,MAAO,UACPC,MAAO,CAAC,WACRT,OAAQU,OAAOV,GAEfW,qBAAqB,IAElBC,OAAO,qDAGd,OACIC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,4BAjBSC,qDCAdC,UAAA,SAACC,GAmCZ,OACIN,EAAAC,EAAAC,cAAA,OAAKK,UAAU,UAAUC,wBAnCR,SAACC,GAClB,IAAMC,EAAK,IAAIC,IAAW,CACtBC,MAAM,EACNC,QAAQ,EACRC,aAAa,EACbC,WAAY,GACZC,UAAW,SAAUC,EAAKC,GACtB,GAAIA,GAAQC,IAAKC,YAAYF,GACzB,IAEI,OADAC,IAAKE,UAAU,CAAEC,YAAa,KACvBH,IAAKH,UAAUE,EAAMD,GAAKR,MACnC,MAAOc,IAGb,IAEI,OADAJ,IAAKE,UAAU,CAAEC,YAAa,KACvBH,IAAKK,cAAcP,GAAKR,MACjC,MAAOc,IAET,MAAO,MAaf,OAVAb,EAAGe,KAAKC,MAAMC,OAAO,CACjB,SAEJjB,EAAGkB,OAAOF,MAAMC,OAAO,CACnB,kBACA,MACA,OACA,MACA,QAEG,CAAEE,OAAQnB,EAAGX,OAAOU,IAGuBqB,CAAaxB,EAAMG,2RC5BzEsB,MAAQ,CACJC,QAAS,GACTC,UAAU,KAQdC,iDAAa,SAAAC,EAAOhC,GAAP,IAAAiC,EAAAC,EAAA,OAAAC,EAAArC,EAAAsC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACTC,EAAKC,SAAS,CAACX,UAAS,IADfO,EAAAE,KAAA,EAEmCG,YAAiB,CAAC1D,OAAOgB,IAF5D,OAAAiC,EAAAI,EAAAM,KAEiBT,EAFjBD,EAEDW,KAAMC,WAAYX,MAC1BM,EAAKC,SAAS,CAAEZ,QAASK,EAAOJ,UAAU,IAHjC,wBAAAO,EAAAS,SAAAd,+IAJT,IAAMhC,EAAKf,UAAQC,KAAKC,MAAM,YAAY,GAC1C4D,KAAKhB,WAAW/B,qDASMgD,GACtB,GAAID,KAAK5C,MAAM8C,SAASC,QAAQ,YAAY,GAAKF,EAAUC,SAASC,QAAQ,YAAY,GAAKH,KAAK5C,MAAM8C,WAAWD,EAAUC,SAAS,KAC3HjD,EAAMgD,EAAUG,OAAhBnD,GACP+C,KAAKhB,WAAW/B,qCAIf,IAAAoD,EACmEL,KAAKnB,MADxEyB,EAAAD,EACGvB,QAAUyB,EADbD,EACaC,MAAMC,EADnBF,EACmBE,UAAUC,EAD7BH,EAC6BG,KAAKC,EADlCJ,EACkCI,OAAoB3B,GADtDuB,EACyCf,KADzCe,EAC8Cd,KAD9Ca,EACsDtB,UAC3D,OACIjC,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACXP,EAAAC,EAAAC,cAAA,WAASK,UAAU,mBAEX0B,EACAjC,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,MAEA7D,EAAAC,EAAAC,cAAA,WAASK,UAAU,QACfP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eACXP,EAAAC,EAAAC,cAAA,KAAGK,UAAU,cAAckD,GAC3BzD,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACXP,EAAAC,EAAAC,cAAA,YAAO4D,IAAOJ,GAAWK,UAAU,GAAGC,OAAO,wCAC7ChE,EAAAC,EAAAC,cAAA,KAAGK,UAAU,sBAAwBP,EAAAC,EAAAC,cAAA,YAAO,KAGpDF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,gBACXP,EAAAC,EAAAC,cAACG,EAAD,CAAUI,MAAOkD,KAErB3D,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACXP,EAAAC,EAAAC,cAAA,KAAGK,UAAU,4BAETqD,EAAOK,MAAMC,OAAO,EACpBN,EAAOK,MAAME,IAAI,SAACC,EAAUC,GAAX,OAAiBrE,EAAAC,EAAAC,cAACoE,EAAA,UAAD,CAAWC,IAAKF,EAAG9D,UAAU,gBAAgBiE,GAAI,eAAeJ,EAASjE,IAAKiE,EAASK,QAEzHzE,EAAAC,EAAAC,cAACoE,EAAA,UAAD,CAAW/D,UAAU,gBAAgBiE,GAAG,uBAAxC,wBAKhBxE,EAAAC,EAAAC,cAACwE,EAAD,OA4BJ1E,EAAAC,EAAAC,cAACyE,EAAA,EAAD,cApFavE,kDCX7B,IAAAwE,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAEeI,EAAA,oBACXF,EAAA7E,EAAAC,cAAA,UAAQC,GAAG,UACP2E,EAAA7E,EAAAC,cAAA,OAAKK,UAAU,oBAAf,oBACkBuE,EAAA7E,EAAAC,cAAA,WADlB,WAGI4E,EAAA7E,EAAAC,cAAA,KAAG+E,KAAK,+CAA+CC,IAAI,sBAAsBC,OAAO,UAAxF,0ECPNC,EAAS,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAvF,EAAAwF,KAAG,SAAAtD,EAAOuD,GAAP,IAAAtD,EAAAuD,EAAAC,EAAAC,EAAAC,EAAAnC,EAAAoC,EAAAC,UAAA,OAAAR,EAAAvF,EAAAsC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAN,EAAA2D,EAAA7B,OAAA,QAAA+B,IAAAF,EAAA,GAAAA,EAAA,GAAyF,GAAzFJ,EAAAvD,EAAcwD,cAAd,IAAAD,EAAuB,MAAvBA,EAAAE,EAAAzD,EAA8B0D,eAA9B,IAAAD,EAAwC,CAAEK,eAAgB,oBAA1DL,EAAgFlC,EAAhFvB,EAAgFuB,KAAhFnB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEGyD,MAAMT,EAAKJ,OAAOc,OAAO,CAClCR,OAAQA,EACRE,QAASA,GACXnC,EAAK,CAACA,QAAM,KACb0C,KAAK,SAACC,GACH,GAAIA,EAASC,GACT,OAAOD,EAASE,SAGvBC,MAAM,SAAClF,GACJmF,QAAQC,KAAKpF,KAZP,cAAAiB,EAAAoE,OAAA,SAAApE,EAAAM,MAAA,OAAAN,EAAAC,KAAA,EAAAD,EAAAqE,GAAArE,EAAA,SAeVkE,QAAQnF,IAARiB,EAAAqE,IAfU,yBAAArE,EAAAS,SAAAd,EAAA,iBAAH,gBAAA2E,GAAA,OAAAzB,EAAA0B,MAAA7D,KAAA8C,YAAA,GAmBAZ,oKCATM,EAAM,iCAINI,EAAU,CACZI,eAAgB,mBAChBc,cAAA,SAAAC,OAJU,kFAIsBC,QAAQ,KAAK,MAG3CC,EAAc,eAAAC,EAAA9B,OAAAC,EAAA,EAAAD,CAAAE,EAAAvF,EAAAwF,KAAG,SAAA4B,EAAAC,GAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAjE,EAAA,OAAA4B,EAAAvF,EAAAsC,KAAA,SAAAuF,GAAA,cAAAA,EAAArF,KAAAqF,EAAApF,MAAA,cAAA6E,EAAAD,EAASE,gBAAT,IAAAD,EAAoB,EAApBA,EAAAE,EAAAH,EAAuBI,aAAvB,IAAAD,EAA+B,KAA/BA,EAAAE,EAAAL,EAAqCM,cAArC,IAAAD,EAA8C,KAA9CA,EAAAE,EAAAP,EAAoD1D,cAApD,IAAAiE,EAA2D,KAA3DA,EAAAC,EAAApF,KAAA,EACNyD,MAAMT,EAAK,CACpBE,OAAQ,OACRE,QAASA,EACTnC,KAAMoE,KAAKC,UAAU,CACjBC,MAAK,mHAAAhB,OAGiBO,EAHjB,wEAAAP,OAGgGS,EAHhG,YAAAT,OAGgHW,EAHhH,YAAAX,OAGiIrD,EAHjI,ouBA8BZyC,KAAK,SAACC,GACH,GAAIA,EAASC,GACT,OAAOD,EAASE,SAGvBC,MAAM,SAAClF,GACJmF,QAAQC,KAAKpF,KAzCE,cAAAuG,EAAAlB,OAAA,SAAAkB,EAAAhF,MAAA,wBAAAgF,EAAA7E,SAAAoE,MAAH,gBAAAa,GAAA,OAAAd,EAAAL,MAAA7D,KAAA8C,YAAA,GA6CdnD,EAAgB,eAAAsF,EAAA7C,OAAAC,EAAA,EAAAD,CAAAE,EAAAvF,EAAAwF,KAAG,SAAA2C,EAAAC,GAAA,IAAAlJ,EAAA,OAAAqG,EAAAvF,EAAAsC,KAAA,SAAA+F,GAAA,cAAAA,EAAA7F,KAAA6F,EAAA5F,MAAA,cAASvD,EAATkJ,EAASlJ,OAATmJ,EAAA5F,KAAA,EACRyD,MAAMT,EAAK,CACpBE,OAAQ,OACRE,QAASA,EACTnC,KAAMoE,KAAKC,UAAU,CACjBC,MAAK,kHAAAhB,OAGgB9H,EAHhB,2bAsBZkH,KAAK,SAACC,GACH,GAAIA,EAASC,GACT,OAAOD,EAASE,SAGvBC,MAAM,SAAClF,GACJmF,QAAQC,KAAKpF,KAjCI,cAAA+G,EAAA1B,OAAA,SAAA0B,EAAAxF,MAAA,wBAAAwF,EAAArF,SAAAmF,MAAH,gBAAAG,GAAA,OAAAJ,EAAApB,MAAA7D,KAAA8C,YAAA,GAqChBwC,EAAW,eAAAC,EAAAnD,OAAAC,EAAA,EAAAD,CAAAE,EAAAvF,EAAAwF,KAAG,SAAAiD,IAAA,OAAAlD,EAAAvF,EAAAsC,KAAA,SAAAoG,GAAA,cAAAA,EAAAlG,KAAAkG,EAAAjG,MAAA,cAAAiG,EAAAjG,KAAA,EACHyD,MAAMT,EAAK,CACpBE,OAAQ,OACRE,QAASA,EACTnC,KAAMoE,KAAKC,UAAU,CACjBC,MAAK,4dAmBZ5B,KAAK,SAACC,GACH,GAAIA,EAASC,GACT,OAAOD,EAASE,SAGvBC,MAAM,SAAClF,GACJmF,QAAQC,KAAKpF,KA9BD,cAAAoH,EAAA/B,OAAA,SAAA+B,EAAA7F,MAAA,wBAAA6F,EAAA1F,SAAAyF,MAAH,yBAAAD,EAAA1B,MAAA7D,KAAA8C,YAAA","file":"static/js/5.dd2ae916.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { Control } from 'react-keeper';\r\nimport 'gitalk/dist/gitalk.css'\r\nimport Gitalk from 'gitalk'\r\n\r\nexport default class extends PureComponent {\r\n    componentDidMount() {\r\n        const number = Control.path.split('article/')[1];\r\n        var gitalk = new Gitalk({\r\n            clientID: 'b36eae2069001417b114',\r\n            clientSecret: '22b5da9b1fd92cca7268dfd0eaf4305ee427f0f2',\r\n            repo: 'notes',\r\n            owner: 'XboxYan',\r\n            admin: ['XboxYan'],\r\n            number: Number(number),\r\n            //id: window.location.pathname,      // Ensure uniqueness and length less than 50\r\n            distractionFreeMode: false  // Facebook-like distraction free mode\r\n        })\r\n        gitalk.render('gitalk-container')\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"gitalk-container\"></div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Remarkable from 'remarkable';\r\nimport hljs from 'highlightjs';\r\nimport '../mark.css';\r\n\r\nexport default (props) => {\r\n    const getRawMarkup = (value) => {\r\n        const md = new Remarkable({\r\n            html: true,\r\n            breaks: true,\r\n            typographer: true,\r\n            langPrefix: '',\r\n            highlight: function (str, lang) {\r\n                if (lang && hljs.getLanguage(lang)) {\r\n                    try {\r\n                        hljs.configure({ classPrefix: '' });\r\n                        return hljs.highlight(lang, str).value;\r\n                    } catch (err) { }\r\n                }\r\n\r\n                try {\r\n                    hljs.configure({ classPrefix: '' });\r\n                    return hljs.highlightAuto(str).value;\r\n                } catch (err) { }\r\n\r\n                return ''; // use external default escaping\r\n            }\r\n        });\r\n        md.core.ruler.enable([\r\n            'abbr'\r\n        ]);\r\n        md.inline.ruler.enable([\r\n            'footnote_inline',\r\n            'ins',\r\n            'mark',\r\n            'sub',\r\n            'sup'\r\n        ]);\r\n        return { __html: md.render(value) };\r\n    }\r\n    return (\r\n        <div className=\"preview\" dangerouslySetInnerHTML={getRawMarkup(props.value)}></div>\r\n    )\r\n}","import React, { PureComponent } from 'react';\r\nimport fetchData from '../util/Fetch';\r\nimport { Control,CacheLink } from 'react-keeper';\r\n//import Donate from '../components/donate';\r\nimport Loader from '../components/loader';\r\nimport Footer from '../components/footer';\r\nimport Comment from '../components/comment';\r\nimport Markview from '../components/markview';\r\nimport { getArticleDetail } from '../util/api';\r\nimport moment from 'moment';\r\n\r\nexport default class extends PureComponent {\r\n\r\n    state = {\r\n        article: {},\r\n        isrender: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        const id = Control.path.split('article/')[1];\r\n        this.getArticle(id);\r\n    }\r\n\r\n    getArticle = async (id) => {\r\n        this.setState({isrender:true});\r\n        const { data:{repository:{issue}} } = await getArticleDetail({number:id});\r\n        this.setState({ article: issue, isrender: false });\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if( this.props.pathname.indexOf('article')>=0 && nextProps.pathname.indexOf('article')>=0 && this.props.pathname!==nextProps.pathname){\r\n            const {id} = nextProps.params;\r\n            this.getArticle(id);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { article:{ title,createdAt,body,labels,prev,next }, isrender } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <section className=\"main sildeUpMin\">\r\n                    {\r\n                        isrender?\r\n                        <Loader/>\r\n                        :\r\n                        <article className=\"post\">\r\n                            <div className=\"post-header\">\r\n                                <p className=\"post-title\">{title}</p>\r\n                                <div className=\"meta-info\">\r\n                                    <span>{moment(createdAt).utcOffset(8).format(\"YYYY年M月D日 , HH:mm:ss\")}</span>\r\n                                    <i className=\"iconfont icon-eye\"></i><span>{0}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"post-content\">\r\n                                <Markview value={body} />\r\n                            </div>\r\n                            <div className=\"post-meta\">\r\n                                <i className=\"iconfont icon-tag-inner\"></i>\r\n                                {\r\n                                    labels.nodes.length>0? \r\n                                    labels.nodes.map((category, i) => <CacheLink key={i} className=\"category-link\" to={\"/categories/\"+category.id}>{category.name}</CacheLink>)\r\n                                    :\r\n                                    <CacheLink className=\"category-link\" to=\"/categories/unknown\">未分类</CacheLink>\r\n                                }\r\n                            </div>\r\n                        </article>\r\n                    }\r\n                    <Comment/>\r\n                    {\r\n                        /*\r\n                    <div className=\"post-footer\">\r\n                        <div className=\"pf-left\">\r\n                            <img className=\"pf-avatar\" alt=\"XboxYan\" src={require(\"../img/header.png\")} />\r\n                            <p className=\"pf-des\">hi,i am XboxYan</p>\r\n                        </div>\r\n                        <div className=\"pf-right\">\r\n                            <div className=\"pf-links\">\r\n                                <Donate />\r\n                            </div>\r\n                            {\r\n                                !isrender&&\r\n                                <nav className=\"pf-paginator\">\r\n                                    {\r\n                                        prev&&<CacheLink to={\"/article/\"+prev._id} data-hover={prev.title}>上一篇</CacheLink>\r\n                                    }\r\n                                    {\r\n                                        next&&<CacheLink to={\"/article/\"+next._id} data-hover={next.title}> 下一篇</CacheLink>\r\n                                    }\r\n                                </nav>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    */\r\n                    }\r\n                </section>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default () => (\r\n    <footer id=\"footer\">\r\n        <div className=\"footer-copyright\">\r\n            © 2018 XboxYan<br />\r\n            Theme By \r\n            <a href=\"https://github.com/Lemonreds/hexo-theme-Nayo\" rel=\"noopener noreferrer\" target=\"_blank\"> Nayo</a>\r\n        </div>\r\n    </footer>\r\n)","const fetchData = async (url, { method = 'GET', headers = { 'Content-Type': 'application/json' }, body } = {}) => {\r\n    try {\r\n        return await fetch(url, Object.assign({\r\n            method: method,\r\n            headers: headers,\r\n        },body?{body}:{}))\r\n        .then((response) => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.warn(err);\r\n        })\r\n    } catch (error) {\r\n        console.err(error)\r\n    }\r\n}\r\n\r\nexport default fetchData;","const fetchData = async (url, { method = 'GET', headers = { 'Content-Type': 'application/json' }, body } = {}) => {\r\n    try {\r\n        return await fetch(url, Object.assign({\r\n            method: method,\r\n            headers: headers,\r\n        }, body ? { body } : {}))\r\n            .then((response) => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n            })\r\n    } catch (error) {\r\n        console.err(error)\r\n    }\r\n}\r\n\r\nconst url = 'https://api.github.com/graphql';\r\n\r\nconst token = '2-7-4-b-0-1-7-e-5-f-a-7-9-b-b-9-b-7-b-b-9-8-8-5-8-6-2-4-7-7-7-7-7-6-f-3-7-c-f-e';\r\n\r\nconst headers = {\r\n    'Content-Type': 'application/json',\r\n    'Authorization': `token ${token.replace(/-/g,'')}`\r\n}\r\n\r\nconst getArticleList = async ({ pageSize = 5, after = null, before = null, labels=null }) => {\r\n    return await fetch(url, {\r\n        method: 'POST',\r\n        headers: headers,\r\n        body: JSON.stringify({\r\n            query: `\r\n            {\r\n                repository(owner: \"XboxYan\", name: \"notes\") {\r\n                  issues(first: ${pageSize}, states: OPEN, orderBy: {field: UPDATED_AT, direction: DESC},after:${after},before:${before},labels:${labels}) {\r\n                    pageInfo {\r\n                      hasPreviousPage\r\n                      startCursor\r\n                      hasNextPage\r\n                      endCursor\r\n                    }\r\n                    totalCount\r\n                    nodes {\r\n                        number\r\n                        title\r\n                        id\r\n                        createdAt\r\n                        labels(first: 10) {\r\n                            nodes {\r\n                                color\r\n                                name\r\n                                id\r\n                          }\r\n                        }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            `\r\n        })\r\n    })\r\n    .then((response) => {\r\n        if (response.ok) {\r\n            return response.json();\r\n        }\r\n    })\r\n    .catch((err) => {\r\n        console.warn(err);\r\n    })\r\n}\r\n\r\nconst getArticleDetail = async ({ number }) => {\r\n    return await fetch(url, {\r\n        method: 'POST',\r\n        headers: headers,\r\n        body: JSON.stringify({\r\n            query: `\r\n            {\r\n                repository(owner: \"XboxYan\", name: \"notes\") {\r\n                  issue(number:${number}) {\r\n                    body\r\n                    number\r\n                    id\r\n                    title\r\n                    createdAt\r\n                    labels(first: 10) {\r\n                        nodes {\r\n                            color\r\n                            name\r\n                            id\r\n                        }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            `\r\n        })\r\n    })\r\n    .then((response) => {\r\n        if (response.ok) {\r\n            return response.json();\r\n        }\r\n    })\r\n    .catch((err) => {\r\n        console.warn(err);\r\n    })\r\n}\r\n\r\nconst getCategory = async () => {\r\n    return await fetch(url, {\r\n        method: 'POST',\r\n        headers: headers,\r\n        body: JSON.stringify({\r\n            query: `\r\n            {\r\n                repository(owner: \"XboxYan\", name: \"notes\") {\r\n                  labels(first: 99) {\r\n                          nodes{\r\n                        color\r\n                        description\r\n                        color\r\n                        id\r\n                        isDefault\r\n                        name\r\n                    }\r\n                    totalCount\r\n                  }\r\n                }\r\n              }\r\n            `\r\n        })\r\n    })\r\n    .then((response) => {\r\n        if (response.ok) {\r\n            return response.json();\r\n        }\r\n    })\r\n    .catch((err) => {\r\n        console.warn(err);\r\n    })\r\n}\r\n\r\nexport { getArticleList,getArticleDetail,getCategory };"],"sourceRoot":""}