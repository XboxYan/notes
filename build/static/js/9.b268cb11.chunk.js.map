{"version":3,"sources":["pages/search.js","util/Fetch.js"],"names":["state","data","keywords","isrender","getArticles","_callee","articles","F_github_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","_this","setState","fetchData","sent","stop","search","ev","target","value","replace","timer","clearTimeout","setTimeout","_this$state","this","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","className","spellCheck","type","placeholder","onChange","onClick","Control","go","_components_loader__WEBPACK_IMPORTED_MODULE_8__","length","map","d","key","_id","react_keeper__WEBPACK_IMPORTED_MODULE_10__","to","title","description","PureComponent","_ref","Object","F_github_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","url","_ref2","_ref2$method","method","_ref2$headers","headers","body","_args","arguments","undefined","Content-Type","fetch","assign","then","response","ok","json","catch","err","console","warn","abrupt","t0","_x","apply"],"mappings":"4bAOIA,MAAQ,CACJC,KAAM,GACNC,SAAU,GACVC,UAAU,KAGdC,kDAAc,SAAAC,EAAOH,GAAP,IAAAI,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACVC,EAAKC,SAAS,CAAEX,UAAU,IADhBO,EAAAE,KAAA,EAEaG,YAAU,wBAA0Bb,GAFjD,OAEJI,EAFII,EAAAM,KAGVH,EAAKC,SAAS,CAAEb,KAAMK,EAASL,KAAME,UAAU,IAHrC,wBAAAO,EAAAO,SAAAZ,8DAMda,OAAS,SAACC,GAAO,IAEPjB,EADYiB,EAAGC,OAAbC,MACeC,QAAQ,OAAQ,IACvCT,EAAKC,SAAS,CAAEZ,aAChBW,EAAKU,OAASC,aAAaX,EAAKU,OAChCV,EAAKU,MAAQE,WAAW,WACpBvB,GAAUW,EAAKT,YAAYF,IAC5B,8EAGE,IAAAwB,EACgCC,KAAK3B,MAAlCE,EADHwB,EACGxB,SAAUD,EADbyB,EACazB,KAAME,EADnBuB,EACmBvB,SACxB,OACIyB,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,QACXF,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,+BACXF,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,iBACXF,EAAApB,EAAAqB,cAAA,SAAOE,YAAY,EAAOC,KAAK,OAAOC,YAAY,6CAAUC,SAAUP,KAAKT,OAAQG,MAAOnB,EAAU4B,UAAU,iBAC9GF,EAAApB,EAAAqB,cAAA,QAAMC,UAAU,qCAAqCK,QAAS,kBAAIC,UAAQC,IAAI,OAElFT,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,iBAEP5B,IACIC,EACIyB,EAAApB,EAAAqB,cAACS,EAAA,EAAD,MAGIrC,EAAKsC,OAAS,EACVtC,EAAKuC,IAAI,SAACC,GAAD,OACLb,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,cAAcY,IAAKD,EAAEE,KAChCf,EAAApB,EAAAqB,cAACe,EAAA,KAAD,CAAMC,GAAI,YAAcJ,EAAEE,IAAKb,UAAU,gBAAgBW,EAAEK,OAC3DlB,EAAApB,EAAAqB,cAAA,KAAGC,UAAU,kBAAkBW,EAAEM,gBAIzCnB,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,2CAhD9BkB,+ECLvBjC,EAAS,eAAAkC,EAAAC,OAAAC,EAAA,EAAAD,CAAA3C,EAAAC,EAAA4C,KAAG,SAAA/C,EAAOgD,GAAP,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,UAAA,OAAAtD,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAA0C,EAAAM,EAAArB,OAAA,QAAAuB,IAAAF,EAAA,GAAAA,EAAA,GAAyF,GAAzFL,EAAAD,EAAcE,cAAd,IAAAD,EAAuB,MAAvBA,EAAAE,EAAAH,EAA8BI,eAA9B,IAAAD,EAAwC,CAAEM,eAAgB,oBAA1DN,EAAgFE,EAAhFL,EAAgFK,KAAhFjD,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEGoD,MAAMX,EAAKH,OAAOe,OAAO,CAClCT,OAAQA,EACRE,QAASA,GACXC,EAAK,CAACA,QAAM,KACbO,KAAK,SAACC,GACH,GAAIA,EAASC,GACT,OAAOD,EAASE,SAGvBC,MAAM,SAACC,GACJC,QAAQC,KAAKF,KAZP,cAAA7D,EAAAgE,OAAA,SAAAhE,EAAAM,MAAA,OAAAN,EAAAC,KAAA,EAAAD,EAAAiE,GAAAjE,EAAA,SAeV8D,QAAQD,IAAR7D,EAAAiE,IAfU,yBAAAjE,EAAAO,SAAAZ,EAAA,iBAAH,gBAAAuE,GAAA,OAAA3B,EAAA4B,MAAAlD,KAAAkC,YAAA,GAmBA9C","file":"static/js/9.b268cb11.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport Loader from '../components/loader';\r\nimport fetchData from '../util/Fetch';\r\nimport { Control,Link } from 'react-keeper';\r\n\r\nexport default class extends PureComponent {\r\n\r\n    state = {\r\n        data: [],\r\n        keywords: '',\r\n        isrender: true\r\n    }\r\n\r\n    getArticles = async (keywords) => {\r\n        this.setState({ isrender: true });\r\n        const articles = await fetchData('/api/search?keywords=' + keywords);\r\n        this.setState({ data: articles.data, isrender: false });\r\n    }\r\n\r\n    search = (ev) => {\r\n        const { value } = ev.target;\r\n        const keywords = value.replace(/\\s+/g, \"\");\r\n        this.setState({ keywords });\r\n        this.timer && clearTimeout(this.timer);\r\n        this.timer = setTimeout(() => {\r\n            keywords&&this.getArticles(keywords);\r\n        }, 500)\r\n    }\r\n\r\n    render() {\r\n        const { keywords, data, isrender } = this.state;\r\n        return (\r\n            <div className=\"mask\">\r\n                <div className=\"search-container sildeUpMin\">\r\n                    <div className=\"search-header\">\r\n                        <input spellCheck={false} type=\"text\" placeholder=\"输入你想搜索的\" onChange={this.search} value={keywords} className=\"search-input\" />\r\n                        <span className=\"search-cancel iconfont icon-cancel\" onClick={()=>Control.go(-1)}></span>\r\n                    </div>\r\n                    <div className=\"search-result\">\r\n                        {\r\n                            keywords && (\r\n                                isrender ?\r\n                                    <Loader />\r\n                                    :\r\n                                    (\r\n                                        data.length > 0 ?\r\n                                            data.map((d) => (\r\n                                                <div className=\"search-item\" key={d._id}>\r\n                                                    <Link to={\"/article/\" + d._id} className=\"search-title\">{d.title}</Link>\r\n                                                    <p className=\"search-content\">{d.description}</p>\r\n                                                </div>\r\n                                            ))\r\n                                            :\r\n                                            <div className=\"iconfont icon-nofound empty\"></div>\r\n                                    )\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","const fetchData = async (url, { method = 'GET', headers = { 'Content-Type': 'application/json' }, body } = {}) => {\r\n    try {\r\n        return await fetch(url, Object.assign({\r\n            method: method,\r\n            headers: headers,\r\n        },body?{body}:{}))\r\n        .then((response) => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.warn(err);\r\n        })\r\n    } catch (error) {\r\n        console.err(error)\r\n    }\r\n}\r\n\r\nexport default fetchData;"],"sourceRoot":""}